<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<es locale="TW">    
    <e>
    <k>labelDefine</k>
    <v>
    <![CDATA[
            public var {varName}:Label;
]]>
    </v>
    </e>
    
    <e>
    <k>textAreaDefine</k>
    <v>
    <![CDATA[
            public var {varName}:TextArea;
]]>
    </v>
    </e>
    
    <e>
    <k>NamedTextAreaInit</k>
    <v>
    <![CDATA[
    		{name}=new TextArea({width},{height},{center});
			DisplayUtil.moveTarget({parent},{name},{x},{y});
			{name}.text=Lang.getWord("{name}_Lang");
]]>
    </v>
    </e>
    
    <e>
    <k>noNameTextAreaInit</k>
    <v>
    <![CDATA[
    		tipTextArea=new TextArea({width},{height},{center});
			DisplayUtil.moveTarget({parent},tipTextArea,{x},{y});
			tipTextArea.text=Lang.getWord("{name}_Lang");
]]>
    </v>
    </e>
    
    <e>
    <k>LableFill</k>
    <v>
    <![CDATA[
    		{name}.text="";
]]>
    </v>
    </e>
    
    <e>
    <k>labelTempDefine</k>
    <v>
    <![CDATA[
            var tipText:Label;
            var tipTextArea:TextArea;
            var tButton:BaseButton;
]]>
    </v>
    </e>
    
    <e>
    <k>noNameLableInit</k>
    <v>
    <![CDATA[
    		tipText=new LimitLabel(Lang.getWord("{name}_Lang"),{width}{center});
			DisplayUtil.moveTarget({parent},tipText,{x},{y});
]]>
    </v>
    </e>
    
    <e>
    <k>labelButtonInit</k>
    <v>
    <![CDATA[
    		tButton=ButtonFactory.createRedLabelButton(Lang.getWord("{name}_Lang"),2,{width});
			DisplayUtil.moveTarget({parent},tButton,{x},{y},"{name}");
]]>
    </v>
    </e>
    
    <e>
    <k>closeButtonInit</k>
    <v>
    <![CDATA[
    		tButton=ButtonFactory.createSmallCloseButton();
			DisplayUtil.moveTarget({parent},tButton,{x},{y},"{name}");
]]>
    </v>
    </e>
    
    <e>
    <k>NamedLableInit</k>
    <v>
    <![CDATA[
    		{name}=new LimitLabel(Lang.getWord("{name}_Lang"),{width}{center});
			DisplayUtil.moveTarget({parent},{name},{x},{y},"{name}");
]]>
    </v>
    </e>
    
    <e>
    <k>textFormat</k>
    <v>
    <![CDATA[,false,TextStyle.getNormalTextFormat({align:"{align}",color:{color}})]]>
    </v>
    </e>
    
    <e>
    <k>textAreaFormat</k>
    <v>
    <![CDATA[TextStyle.getNormalTextFormat({align:"{align}",color:{color}})]]>
    </v>
    </e>
    
    <e>
    <k>xmlItem</k>
    <v>
    <![CDATA[    			<e k="{key}" v="{value}"/>
]]>
    </v>
    </e>
    
    <e>
    <k>itemClassTemplate</k>
    <v>
    <![CDATA[package classes.views
{
    import classes.component.button.BaseButton;
	import classes.component.button.ButtonFactory;
	import classes.component.button.LabelButton;
	import classes.component.holder.HolderVO;
	import classes.component.holder.ImageHolder;
	import classes.component.label.LabelGroup;
	import classes.component.label.LimitLabel;
	import classes.component.label.Label;
	import classes.component.text.TextArea;
	import classes.lang.Lang;
	import classes.load.ZHLoader;
	import classes.tools.DisplayUtil;
	import classes.tools.TextUtil;
	import flash.display.MovieClip;
	import flash.display.Shape;
	import flash.display.Sprite;
	import flash.events.Event;
    import flash.text.TextFormatAlign;
    import classes.style.TextStyle;
	dynamic public class {className} extends Sprite
	{

		public function {className}()
		{
			initialization();
		}
		//==========================================================================
		//  Variables
		//==========================================================================
		// 容器
		private var itemMain:MovieClip;
        {addVar}
		//==========================================================================
		//  Public methods
		//==========================================================================
		public function fillItem(data:Object):void
		{
			{addFill}
		}

		public function clear():void
		{
		    {addClear}
		}
		//==========================================================================
		//  Private methods
		//==========================================================================
		/**
		 *初始化
		 */
		private function initialization():void
		{
			itemMain = ZHLoader.getInstance().getMovieClipByName("{className}");
			itemMain.name = "_mallItemView";
			addChild(itemMain);
			var tipText:Label;
			var tipTextArea:TextArea;
            var tButton:BaseButton;
			{addInit}
		}
	}
}
]]>
    </v>
    </e>
</es>